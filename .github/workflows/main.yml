name: CI/CD Workflow

on: 
  push:
    branches: ['*']
    tags: ['*']
  pull_request:
    branches: ['*']

permissions:
  checks: write
  contents: write
  packages: write
  id-token: write
  pull-requests: write

jobs:
  build-publish:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - type: 'Github'
            registry-url: 'https://npm.pkg.github.com'
            scope: '@FMI-MediaMaster'
            create-new-release: true
            publish-args: ""

          - type: 'NPM'
            registry-url: 'https://registry.npmjs.org'
            scope: '@media-master'
            create-new-release: false
            publish-args: "--access public"

    name: Build & Publish (${{ matrix.config.type }})
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get NodeJS version
        shell: bash
        run: |
          NODEJS_VERSION=$(jq -r '.packages[] | select(startswith("nodejs@")) | split("@")[1]' devbox.json)
          echo "NODEJS_VERSION=$NODEJS_VERSION" >> $GITHUB_ENV
              
      - name: Get PNPM version
        shell: bash
        run: |
          PNPM_VERSION=$(jq -r '.packageManager | split("@")[1]' package.json)
          echo "PNPM_VERSION=$PNPM_VERSION" >> $GITHUB_ENV

      - name: Set config secrets
        shell: bash
        run: echo "NODE_AUTH_TOKEN=${{ matrix.config.type == 'Github' && secrets.GITHUB_TOKEN || secrets.NPM_WRITE_PACKAGES_AUTOMATION_TOKEN }}" >> $GITHUB_ENV
        
      - name: Build npm package
        uses: ./.github/actions/build
        with:
          nodejs-version: ${{ env.NODEJS_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
          registry-url: ${{ matrix.config['registry-url'] }}
          scope: ${{ matrix.config['scope'] }}

      - name: Publish npm package
        if: startsWith(github.ref, 'refs/tags/')
        uses: ./.github/actions/publish
        with:
          create-new-release: ${{ matrix.config['create-new-release'] }}
          publish-args: ${{ matrix.config['publish-args'] }}
          registry-url: ${{ matrix.config['registry-url'] }}
          scope: ${{ matrix.config['scope'] }}
          github-token: ${{ secrets.GITHUB_TOKEN }} 
          node-auth-token: ${{ env.NODE_AUTH_TOKEN }}
