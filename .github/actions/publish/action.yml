name: 'Publish npm package package to NPM/GitHub Packages Registry'

description: 'Builds the package, sets the version from the Git tag, creates a GitHub release, and publishes the package to the NPM/GitHub Packages Registry.'

inputs:
  publish-args:
    description: "Adds extra args for 'pnpm publish' command"
    required: false
    default: ""

  type:
    description: "Registry type to use (GitHub/NPM)"
    required: true

  registry-url:
    description: "Registry URL to use"
    required: true
      
  scope:
    description: "Scope to use"
    required: true 

  github-token:
    description: "Github token"
    required: true

  node-auth-token:
    description: "Npm token to use for publishing"
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set Tag Name
      shell: bash
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        TAG_VERSION=${TAG_NAME#v}
        echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV

    - name: Set package version
      shell: bash
      run: pnpm version ${{ env.TAG_VERSION }} --no-git-tag-version
    
    - name: Get package name
      shell: bash
      run: |
        PACKAGE_NAME=$(pnpm pkg get name | tr -d '"')
        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

    - name: Publish package
      shell: bash
      run: |
        pnpm pkg set name="${{ inputs.scope }}/${{ env.PACKAGE_NAME }}"
        pnpm pkg set publishConfig.registry="${{ inputs.registry-url }}"
        PUBLISH_ARGS="${{ inputs.publish-args }}"
        pnpm publish --no-git-checks $PUBLISH_ARGS
      env:
        NODE_AUTH_TOKEN: ${{ inputs.node-auth-token }}

    - name: Get publish link
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      run: |
        if [[ "${{ inputs.registry-url }}" == *"npm.pkg.github.com"* ]]; then
          RELEASE_LINK=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /orgs/${{ inputs.scope }}/packages/npm/${{ env.PACKAGE_NAME }}/versions \
            --jq ".[] | select(.name == \"${{ env.TAG_VERSION }}\") | .html_url")
        else
          RELEASE_LINK="https://www.npmjs.com/package/${{ inputs.scope }}/${{ env.PACKAGE_NAME }}/v/${{ env.TAG_VERSION }}"
        fi

        echo "$RELEASE_LINK" > publish-link.txt

    - name: Upload publish link
      uses: actions/upload-artifact@v4
      with:
        name: publish-link-${{ inputs.type }}
        path: publish-link.txt
